let remainder = 0
let eredmeny = 0
let remaining = 0
let value = 0
let decimal = 0
let hatvany = 0
let string_length = 0
let number = ""
let number_length = 0
let out_num = 0
let in_string = ""
basic.forever(() => {
    in_string = serial.readLine()
    out_num = 0
    string_length = in_string.length
    number_length = string_length - 5
    number = in_string.substr(5, number_length)
    basic.showNumber(number_length)
    serial.writeString("original input: ")
    serial.writeLine(number)
    if ("-B2D".compare(in_string.substr(0, 4)) == 0) {
        serial.writeLine("coversion type: B2D")
        for (let index = 0; index <= number_length; index++) {
            hatvany = number_length - (index + 1)
            if (number.charAt(index).compare("1") == 0) {
                value = Math.pow(2, hatvany)
                out_num = out_num + value
            } else {
                value = 0
                out_num = out_num + value
            }
        }
    }
    if ("-D2B".compare(in_string.substr(0, 4)) == 0) {
        serial.writeLine("coversion type: D2B")
        decimal = parseInt(number)
        hatvany = 0
        remaining = decimal
        eredmeny = 1
        while (eredmeny != 0) {
            remainder = remaining / 2
        }
    }
    if (number_length == 0) {
        serial.writeLine("error: empty message!")
    } else {

    }
})